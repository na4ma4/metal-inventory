// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: github.com/na4ma4/metal-inventory/api/common.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescGZIP(), []int{0}
}

type Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                 `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Tag          []string               `protobuf:"bytes,12,rep,name=tag,proto3" json:"tag,omitempty"`
	Version      string                 `protobuf:"bytes,90,opt,name=version,proto3" json:"version,omitempty"`
	GitHash      string                 `protobuf:"bytes,91,opt,name=git_hash,json=gitHash,proto3" json:"git_hash,omitempty"`
	BuildDate    string                 `protobuf:"bytes,92,opt,name=build_date,json=buildDate,proto3" json:"build_date,omitempty"`
	LastSeen     *timestamppb.Timestamp `protobuf:"bytes,100,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	PingLatency  *durationpb.Duration   `protobuf:"bytes,102,opt,name=ping_latency,json=pingLatency,proto3" json:"ping_latency,omitempty"`
	InfoStat     *InfoStat              `protobuf:"bytes,200,opt,name=info_stat,json=infoStat,proto3" json:"info_stat,omitempty"`
	HwStat       *HardwareStat          `protobuf:"bytes,201,opt,name=hw_stat,json=hwStat,proto3" json:"hw_stat,omitempty"`
	SystemStart  *timestamppb.Timestamp `protobuf:"bytes,301,opt,name=system_start,json=systemStart,proto3" json:"system_start,omitempty"`
	ProcessStart *timestamppb.Timestamp `protobuf:"bytes,302,opt,name=process_start,json=processStart,proto3" json:"process_start,omitempty"`
	// Only used in rendering host lists, not transferred over the wire.
	LastSeenAgo string `protobuf:"bytes,1001,opt,name=last_seen_ago,json=lastSeenAgo,proto3" json:"last_seen_ago,omitempty"`
	Latency     string `protobuf:"bytes,1003,opt,name=latency,proto3" json:"latency,omitempty"`
}

func (x *Member) Reset() {
	*x = Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescGZIP(), []int{1}
}

func (x *Member) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Member) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Member) GetTag() []string {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *Member) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Member) GetGitHash() string {
	if x != nil {
		return x.GitHash
	}
	return ""
}

func (x *Member) GetBuildDate() string {
	if x != nil {
		return x.BuildDate
	}
	return ""
}

func (x *Member) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *Member) GetPingLatency() *durationpb.Duration {
	if x != nil {
		return x.PingLatency
	}
	return nil
}

func (x *Member) GetInfoStat() *InfoStat {
	if x != nil {
		return x.InfoStat
	}
	return nil
}

func (x *Member) GetHwStat() *HardwareStat {
	if x != nil {
		return x.HwStat
	}
	return nil
}

func (x *Member) GetSystemStart() *timestamppb.Timestamp {
	if x != nil {
		return x.SystemStart
	}
	return nil
}

func (x *Member) GetProcessStart() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessStart
	}
	return nil
}

func (x *Member) GetLastSeenAgo() string {
	if x != nil {
		return x.LastSeenAgo
	}
	return ""
}

func (x *Member) GetLatency() string {
	if x != nil {
		return x.Latency
	}
	return ""
}

type InfoStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Hostname  string                 `protobuf:"bytes,21,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Uptime    uint64                 `protobuf:"varint,22,opt,name=uptime,proto3" json:"uptime,omitempty"`
	BootTime  uint64                 `protobuf:"varint,23,opt,name=boot_time,json=bootTime,proto3" json:"boot_time,omitempty"`
	// number of processes
	Procs uint64 `protobuf:"varint,24,opt,name=procs,proto3" json:"procs,omitempty"`
	// ex: freebsd, linux
	Os string `protobuf:"bytes,25,opt,name=os,proto3" json:"os,omitempty"`
	// ex: ubuntu, linuxmint
	Platform string `protobuf:"bytes,26,opt,name=platform,proto3" json:"platform,omitempty"`
	// ex: debian, rhel
	PlatformFamily string `protobuf:"bytes,27,opt,name=platform_family,json=platformFamily,proto3" json:"platform_family,omitempty"`
	// version of the complete OS
	PlatformVersion string `protobuf:"bytes,28,opt,name=platform_version,json=platformVersion,proto3" json:"platform_version,omitempty"`
	// version of the OS kernel (if available)
	KernelVersion string `protobuf:"bytes,29,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	// native cpu architecture queried at runtime, as returned by `uname -m` or empty string in case of error
	KernelArch string `protobuf:"bytes,30,opt,name=kernel_arch,json=kernelArch,proto3" json:"kernel_arch,omitempty"`
	VirtSystem string `protobuf:"bytes,31,opt,name=virt_system,json=virtSystem,proto3" json:"virt_system,omitempty"`
	// guest or host
	VirtRole string `protobuf:"bytes,32,opt,name=virt_role,json=virtRole,proto3" json:"virt_role,omitempty"`
	// ex: uuid
	HostId string `protobuf:"bytes,33,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
}

func (x *InfoStat) Reset() {
	*x = InfoStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoStat) ProtoMessage() {}

func (x *InfoStat) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoStat.ProtoReflect.Descriptor instead.
func (*InfoStat) Descriptor() ([]byte, []int) {
	return file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescGZIP(), []int{2}
}

func (x *InfoStat) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *InfoStat) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *InfoStat) GetUptime() uint64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *InfoStat) GetBootTime() uint64 {
	if x != nil {
		return x.BootTime
	}
	return 0
}

func (x *InfoStat) GetProcs() uint64 {
	if x != nil {
		return x.Procs
	}
	return 0
}

func (x *InfoStat) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *InfoStat) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *InfoStat) GetPlatformFamily() string {
	if x != nil {
		return x.PlatformFamily
	}
	return ""
}

func (x *InfoStat) GetPlatformVersion() string {
	if x != nil {
		return x.PlatformVersion
	}
	return ""
}

func (x *InfoStat) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *InfoStat) GetKernelArch() string {
	if x != nil {
		return x.KernelArch
	}
	return ""
}

func (x *InfoStat) GetVirtSystem() string {
	if x != nil {
		return x.VirtSystem
	}
	return ""
}

func (x *InfoStat) GetVirtRole() string {
	if x != nil {
		return x.VirtRole
	}
	return ""
}

func (x *InfoStat) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

type HardwareStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MachineId  string             `protobuf:"bytes,11,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	Hypervisor string             `protobuf:"bytes,12,opt,name=hypervisor,proto3" json:"hypervisor,omitempty"`
	Product    *HWProduct         `protobuf:"bytes,20,opt,name=product,proto3" json:"product,omitempty"`
	Board      *HWBoard           `protobuf:"bytes,21,opt,name=board,proto3" json:"board,omitempty"`
	Chassis    *HWChassis         `protobuf:"bytes,22,opt,name=chassis,proto3" json:"chassis,omitempty"`
	Bios       *HWBIOS            `protobuf:"bytes,23,opt,name=bios,proto3" json:"bios,omitempty"`
	Cpu        *HWCPU             `protobuf:"bytes,24,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory     *HWMemory          `protobuf:"bytes,25,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage    []*HWStorageDevice `protobuf:"bytes,26,rep,name=storage,proto3" json:"storage,omitempty"`
	Network    []*HWNetwork       `protobuf:"bytes,27,rep,name=network,proto3" json:"network,omitempty"`
}

func (x *HardwareStat) Reset() {
	*x = HardwareStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareStat) ProtoMessage() {}

func (x *HardwareStat) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareStat.ProtoReflect.Descriptor instead.
func (*HardwareStat) Descriptor() ([]byte, []int) {
	return file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescGZIP(), []int{3}
}

func (x *HardwareStat) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *HardwareStat) GetHypervisor() string {
	if x != nil {
		return x.Hypervisor
	}
	return ""
}

func (x *HardwareStat) GetProduct() *HWProduct {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *HardwareStat) GetBoard() *HWBoard {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *HardwareStat) GetChassis() *HWChassis {
	if x != nil {
		return x.Chassis
	}
	return nil
}

func (x *HardwareStat) GetBios() *HWBIOS {
	if x != nil {
		return x.Bios
	}
	return nil
}

func (x *HardwareStat) GetCpu() *HWCPU {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *HardwareStat) GetMemory() *HWMemory {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *HardwareStat) GetStorage() []*HWStorageDevice {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *HardwareStat) GetNetwork() []*HWNetwork {
	if x != nil {
		return x.Network
	}
	return nil
}

type HWProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Vendor  string `protobuf:"bytes,11,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Version string `protobuf:"bytes,12,opt,name=version,proto3" json:"version,omitempty"`
	Serial  string `protobuf:"bytes,13,opt,name=serial,proto3" json:"serial,omitempty"`
}

func (x *HWProduct) Reset() {
	*x = HWProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HWProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HWProduct) ProtoMessage() {}

func (x *HWProduct) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HWProduct.ProtoReflect.Descriptor instead.
func (*HWProduct) Descriptor() ([]byte, []int) {
	return file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescGZIP(), []int{4}
}

func (x *HWProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HWProduct) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *HWProduct) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HWProduct) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

type HWBoard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Vendor   string `protobuf:"bytes,11,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Version  string `protobuf:"bytes,12,opt,name=version,proto3" json:"version,omitempty"`
	Serial   string `protobuf:"bytes,13,opt,name=serial,proto3" json:"serial,omitempty"`
	AssetTag string `protobuf:"bytes,14,opt,name=asset_tag,json=assetTag,proto3" json:"asset_tag,omitempty"`
}

func (x *HWBoard) Reset() {
	*x = HWBoard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HWBoard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HWBoard) ProtoMessage() {}

func (x *HWBoard) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HWBoard.ProtoReflect.Descriptor instead.
func (*HWBoard) Descriptor() ([]byte, []int) {
	return file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescGZIP(), []int{5}
}

func (x *HWBoard) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HWBoard) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *HWBoard) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HWBoard) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *HWBoard) GetAssetTag() string {
	if x != nil {
		return x.AssetTag
	}
	return ""
}

type HWChassis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     uint64 `protobuf:"varint,10,opt,name=type,proto3" json:"type,omitempty"`
	Vendor   string `protobuf:"bytes,11,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Version  string `protobuf:"bytes,12,opt,name=version,proto3" json:"version,omitempty"`
	Serial   string `protobuf:"bytes,13,opt,name=serial,proto3" json:"serial,omitempty"`
	AssetTag string `protobuf:"bytes,14,opt,name=asset_tag,json=assetTag,proto3" json:"asset_tag,omitempty"`
}

func (x *HWChassis) Reset() {
	*x = HWChassis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HWChassis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HWChassis) ProtoMessage() {}

func (x *HWChassis) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HWChassis.ProtoReflect.Descriptor instead.
func (*HWChassis) Descriptor() ([]byte, []int) {
	return file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescGZIP(), []int{6}
}

func (x *HWChassis) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *HWChassis) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *HWChassis) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HWChassis) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *HWChassis) GetAssetTag() string {
	if x != nil {
		return x.AssetTag
	}
	return ""
}

type HWBIOS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor  string `protobuf:"bytes,10,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Version string `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	Date    string `protobuf:"bytes,12,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *HWBIOS) Reset() {
	*x = HWBIOS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HWBIOS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HWBIOS) ProtoMessage() {}

func (x *HWBIOS) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HWBIOS.ProtoReflect.Descriptor instead.
func (*HWBIOS) Descriptor() ([]byte, []int) {
	return file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescGZIP(), []int{7}
}

func (x *HWBIOS) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *HWBIOS) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HWBIOS) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type HWCPU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor  string `protobuf:"bytes,10,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Model   string `protobuf:"bytes,11,opt,name=model,proto3" json:"model,omitempty"`
	Speed   uint64 `protobuf:"varint,12,opt,name=speed,proto3" json:"speed,omitempty"`
	Cache   uint64 `protobuf:"varint,13,opt,name=cache,proto3" json:"cache,omitempty"`
	Cpus    uint64 `protobuf:"varint,14,opt,name=cpus,proto3" json:"cpus,omitempty"`
	Cores   uint64 `protobuf:"varint,15,opt,name=cores,proto3" json:"cores,omitempty"`
	Threads uint64 `protobuf:"varint,16,opt,name=threads,proto3" json:"threads,omitempty"`
}

func (x *HWCPU) Reset() {
	*x = HWCPU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HWCPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HWCPU) ProtoMessage() {}

func (x *HWCPU) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HWCPU.ProtoReflect.Descriptor instead.
func (*HWCPU) Descriptor() ([]byte, []int) {
	return file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescGZIP(), []int{8}
}

func (x *HWCPU) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *HWCPU) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *HWCPU) GetSpeed() uint64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *HWCPU) GetCache() uint64 {
	if x != nil {
		return x.Cache
	}
	return 0
}

func (x *HWCPU) GetCpus() uint64 {
	if x != nil {
		return x.Cpus
	}
	return 0
}

func (x *HWCPU) GetCores() uint64 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *HWCPU) GetThreads() uint64 {
	if x != nil {
		return x.Threads
	}
	return 0
}

type HWMemory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Speed uint64 `protobuf:"varint,11,opt,name=speed,proto3" json:"speed,omitempty"`
	Size  uint64 `protobuf:"varint,12,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *HWMemory) Reset() {
	*x = HWMemory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HWMemory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HWMemory) ProtoMessage() {}

func (x *HWMemory) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HWMemory.ProtoReflect.Descriptor instead.
func (*HWMemory) Descriptor() ([]byte, []int) {
	return file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescGZIP(), []int{9}
}

func (x *HWMemory) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *HWMemory) GetSpeed() uint64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *HWMemory) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type HWStorageDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Driver string `protobuf:"bytes,2,opt,name=driver,proto3" json:"driver,omitempty"`
	Vendor string `protobuf:"bytes,3,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Model  string `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Serial string `protobuf:"bytes,5,opt,name=serial,proto3" json:"serial,omitempty"`
	Size   uint64 `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *HWStorageDevice) Reset() {
	*x = HWStorageDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HWStorageDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HWStorageDevice) ProtoMessage() {}

func (x *HWStorageDevice) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HWStorageDevice.ProtoReflect.Descriptor instead.
func (*HWStorageDevice) Descriptor() ([]byte, []int) {
	return file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescGZIP(), []int{10}
}

func (x *HWStorageDevice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HWStorageDevice) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *HWStorageDevice) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *HWStorageDevice) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *HWStorageDevice) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *HWStorageDevice) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type HWNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Driver     string `protobuf:"bytes,2,opt,name=driver,proto3" json:"driver,omitempty"`
	MacAddress string `protobuf:"bytes,3,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Port       string `protobuf:"bytes,4,opt,name=port,proto3" json:"port,omitempty"`
	Speed      uint64 `protobuf:"varint,5,opt,name=speed,proto3" json:"speed,omitempty"`
}

func (x *HWNetwork) Reset() {
	*x = HWNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HWNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HWNetwork) ProtoMessage() {}

func (x *HWNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HWNetwork.ProtoReflect.Descriptor instead.
func (*HWNetwork) Descriptor() ([]byte, []int) {
	return file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescGZIP(), []int{11}
}

func (x *HWNetwork) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HWNetwork) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *HWNetwork) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *HWNetwork) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *HWNetwork) GetSpeed() uint64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//	*Message_RegisterMessage
	//	*Message_PingMessage
	//	*Message_PongMessage
	Message isMessage_Message `protobuf_oneof:"message"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescGZIP(), []int{12}
}

func (m *Message) GetMessage() isMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *Message) GetRegisterMessage() *RegisterMessage {
	if x, ok := x.GetMessage().(*Message_RegisterMessage); ok {
		return x.RegisterMessage
	}
	return nil
}

func (x *Message) GetPingMessage() *PingMessage {
	if x, ok := x.GetMessage().(*Message_PingMessage); ok {
		return x.PingMessage
	}
	return nil
}

func (x *Message) GetPongMessage() *PongMessage {
	if x, ok := x.GetMessage().(*Message_PongMessage); ok {
		return x.PongMessage
	}
	return nil
}

type isMessage_Message interface {
	isMessage_Message()
}

type Message_RegisterMessage struct {
	RegisterMessage *RegisterMessage `protobuf:"bytes,100,opt,name=register_message,json=registerMessage,proto3,oneof"`
}

type Message_PingMessage struct {
	PingMessage *PingMessage `protobuf:"bytes,101,opt,name=ping_message,json=pingMessage,proto3,oneof"`
}

type Message_PongMessage struct {
	PongMessage *PongMessage `protobuf:"bytes,102,opt,name=pong_message,json=pongMessage,proto3,oneof"`
}

func (*Message_RegisterMessage) isMessage_Message() {}

func (*Message_PingMessage) isMessage_Message() {}

func (*Message_PongMessage) isMessage_Message() {}

type RegisterMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member *Member `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
}

func (x *RegisterMessage) Reset() {
	*x = RegisterMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMessage) ProtoMessage() {}

func (x *RegisterMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMessage.ProtoReflect.Descriptor instead.
func (*RegisterMessage) Descriptor() ([]byte, []int) {
	return file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescGZIP(), []int{13}
}

func (x *RegisterMessage) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

type PingMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StreamId string                 `protobuf:"bytes,2,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Ts       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=ts,proto3" json:"ts,omitempty"`
}

func (x *PingMessage) Reset() {
	*x = PingMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingMessage) ProtoMessage() {}

func (x *PingMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingMessage.ProtoReflect.Descriptor instead.
func (*PingMessage) Descriptor() ([]byte, []int) {
	return file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescGZIP(), []int{14}
}

func (x *PingMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PingMessage) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *PingMessage) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

type PongMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StreamId string                 `protobuf:"bytes,2,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Ts       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=ts,proto3" json:"ts,omitempty"`
}

func (x *PongMessage) Reset() {
	*x = PongMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PongMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PongMessage) ProtoMessage() {}

func (x *PongMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PongMessage.ProtoReflect.Descriptor instead.
func (*PongMessage) Descriptor() ([]byte, []int) {
	return file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescGZIP(), []int{15}
}

func (x *PongMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PongMessage) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *PongMessage) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

var File_github_com_na4ma4_metal_inventory_api_common_proto protoreflect.FileDescriptor

var file_github_com_na4ma4_metal_inventory_api_common_proto_rawDesc = []byte{
	0x0a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x61, 0x34,
	0x6d, 0x61, 0x34, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2d, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0xad, 0x04, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x69, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x5b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x69, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x5c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x09,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x3c, 0x0a, 0x0c, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x61,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x2f, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x69, 0x63, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f,
	0x53, 0x74, 0x61, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x68, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x18,
	0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x06, 0x68,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0xad, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0xae, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x73, 0x65, 0x65, 0x6e, 0x5f, 0x61, 0x67, 0x6f, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x41, 0x67, 0x6f, 0x12, 0x19, 0x0a, 0x07,
	0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xca, 0x03, 0x0a, 0x08, 0x49, 0x6e, 0x66, 0x6f,
	0x53, 0x74, 0x61, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x63, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x70, 0x72, 0x6f, 0x63, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x66, 0x61,
	0x6d, 0x69, 0x6c, 0x79, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b,
	0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x41, 0x72, 0x63, 0x68, 0x12, 0x1f, 0x0a,
	0x0b, 0x76, 0x69, 0x72, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x72, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x76, 0x69, 0x72, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x76, 0x69, 0x72, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x22, 0xa5, 0x03, 0x0a, 0x0c, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x79, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73,
	0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x79, 0x70, 0x65, 0x72, 0x76,
	0x69, 0x73, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x48, 0x57, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x57, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69,
	0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x57, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x62, 0x69, 0x6f, 0x73,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x48, 0x57, 0x42, 0x49, 0x4f, 0x53, 0x52, 0x04, 0x62, 0x69, 0x6f, 0x73, 0x12, 0x20, 0x0a,
	0x03, 0x63, 0x70, 0x75, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x69, 0x63,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x57, 0x43, 0x50, 0x55, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12,
	0x29, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6d, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x57, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x07, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x69,
	0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x57, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x2c,
	0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x57, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x69, 0x0a, 0x09,
	0x48, 0x57, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0x84, 0x01, 0x0a, 0x07, 0x48, 0x57, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x61, 0x67, 0x22, 0x86,
	0x01, 0x0a, 0x09, 0x48, 0x57, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x54, 0x61, 0x67, 0x22, 0x4e, 0x0a, 0x06, 0x48, 0x57, 0x42, 0x49, 0x4f,
	0x53, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x05, 0x48, 0x57, 0x43, 0x50,
	0x55, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x70, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63, 0x70, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x22,
	0x48, 0x0a, 0x08, 0x48, 0x57, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x48, 0x57,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x09, 0x48, 0x57, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x22, 0xd1, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6d, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x69, 0x6e, 0x67, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x70, 0x6f, 0x6e, 0x67, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x69, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x6f, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3a, 0x0a, 0x0f,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x27, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6d, 0x69, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x66, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73,
	0x22, 0x66, 0x0a, 0x0b, 0x50, 0x6f, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x02,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x61, 0x34, 0x6d, 0x61, 0x34, 0x2f, 0x6d, 0x65,
	0x74, 0x61, 0x6c, 0x2d, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x61, 0x70,
	0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescOnce sync.Once
	file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescData = file_github_com_na4ma4_metal_inventory_api_common_proto_rawDesc
)

func file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescGZIP() []byte {
	file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescOnce.Do(func() {
		file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescData)
	})
	return file_github_com_na4ma4_metal_inventory_api_common_proto_rawDescData
}

var file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_github_com_na4ma4_metal_inventory_api_common_proto_goTypes = []interface{}{
	(*Empty)(nil),                 // 0: mic.api.Empty
	(*Member)(nil),                // 1: mic.api.Member
	(*InfoStat)(nil),              // 2: mic.api.InfoStat
	(*HardwareStat)(nil),          // 3: mic.api.HardwareStat
	(*HWProduct)(nil),             // 4: mic.api.HWProduct
	(*HWBoard)(nil),               // 5: mic.api.HWBoard
	(*HWChassis)(nil),             // 6: mic.api.HWChassis
	(*HWBIOS)(nil),                // 7: mic.api.HWBIOS
	(*HWCPU)(nil),                 // 8: mic.api.HWCPU
	(*HWMemory)(nil),              // 9: mic.api.HWMemory
	(*HWStorageDevice)(nil),       // 10: mic.api.HWStorageDevice
	(*HWNetwork)(nil),             // 11: mic.api.HWNetwork
	(*Message)(nil),               // 12: mic.api.Message
	(*RegisterMessage)(nil),       // 13: mic.api.RegisterMessage
	(*PingMessage)(nil),           // 14: mic.api.PingMessage
	(*PongMessage)(nil),           // 15: mic.api.PongMessage
	(*timestamppb.Timestamp)(nil), // 16: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 17: google.protobuf.Duration
}
var file_github_com_na4ma4_metal_inventory_api_common_proto_depIdxs = []int32{
	16, // 0: mic.api.Member.last_seen:type_name -> google.protobuf.Timestamp
	17, // 1: mic.api.Member.ping_latency:type_name -> google.protobuf.Duration
	2,  // 2: mic.api.Member.info_stat:type_name -> mic.api.InfoStat
	3,  // 3: mic.api.Member.hw_stat:type_name -> mic.api.HardwareStat
	16, // 4: mic.api.Member.system_start:type_name -> google.protobuf.Timestamp
	16, // 5: mic.api.Member.process_start:type_name -> google.protobuf.Timestamp
	16, // 6: mic.api.InfoStat.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 7: mic.api.HardwareStat.product:type_name -> mic.api.HWProduct
	5,  // 8: mic.api.HardwareStat.board:type_name -> mic.api.HWBoard
	6,  // 9: mic.api.HardwareStat.chassis:type_name -> mic.api.HWChassis
	7,  // 10: mic.api.HardwareStat.bios:type_name -> mic.api.HWBIOS
	8,  // 11: mic.api.HardwareStat.cpu:type_name -> mic.api.HWCPU
	9,  // 12: mic.api.HardwareStat.memory:type_name -> mic.api.HWMemory
	10, // 13: mic.api.HardwareStat.storage:type_name -> mic.api.HWStorageDevice
	11, // 14: mic.api.HardwareStat.network:type_name -> mic.api.HWNetwork
	13, // 15: mic.api.Message.register_message:type_name -> mic.api.RegisterMessage
	14, // 16: mic.api.Message.ping_message:type_name -> mic.api.PingMessage
	15, // 17: mic.api.Message.pong_message:type_name -> mic.api.PongMessage
	1,  // 18: mic.api.RegisterMessage.member:type_name -> mic.api.Member
	16, // 19: mic.api.PingMessage.ts:type_name -> google.protobuf.Timestamp
	16, // 20: mic.api.PongMessage.ts:type_name -> google.protobuf.Timestamp
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_github_com_na4ma4_metal_inventory_api_common_proto_init() }
func file_github_com_na4ma4_metal_inventory_api_common_proto_init() {
	if File_github_com_na4ma4_metal_inventory_api_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HWProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HWBoard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HWChassis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HWBIOS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HWCPU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HWMemory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HWStorageDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HWNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PongMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*Message_RegisterMessage)(nil),
		(*Message_PingMessage)(nil),
		(*Message_PongMessage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_na4ma4_metal_inventory_api_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_na4ma4_metal_inventory_api_common_proto_goTypes,
		DependencyIndexes: file_github_com_na4ma4_metal_inventory_api_common_proto_depIdxs,
		MessageInfos:      file_github_com_na4ma4_metal_inventory_api_common_proto_msgTypes,
	}.Build()
	File_github_com_na4ma4_metal_inventory_api_common_proto = out.File
	file_github_com_na4ma4_metal_inventory_api_common_proto_rawDesc = nil
	file_github_com_na4ma4_metal_inventory_api_common_proto_goTypes = nil
	file_github_com_na4ma4_metal_inventory_api_common_proto_depIdxs = nil
}
